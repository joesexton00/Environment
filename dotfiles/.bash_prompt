if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
fi

STARTBGCOLOR="\e[46m"
ENDBGCOLOR="\e[0m"

if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
        MAGENTA=$(tput setaf 5)
        ORANGE=$(tput setaf 172)
        CYAN=$(tput setaf 6)
        GREEN=$(tput setaf 2)
        YELLOW=$(tput setaf 3)
        PURPLE=$(tput setaf 4)
        WHITE=$(tput setaf 256)
    else
        MAGENTA=$(tput setaf 5)
        ORANGE=$(tput setaf 4)
        CYAN=$(tput setaf 6)
        GREEN=$(tput setaf 2)
        YELLOW=$(tput setaf 3)
        PURPLE=$(tput setaf 1)
        WHITE=$(tput setaf 7)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    CYAN="\033[1;36m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
fi

function git_info() {
    # check if we're in a git repo
    git rev-parse --is-inside-work-tree &>/dev/null || return

    # quickest check for what branch we're on
    branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')

    # check if it's dirty (via github.com/sindresorhus/pure)
    dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "$(show_git_dirty_indicator)")

    echo $WHITE" git: "$YELLOW$branch$dirty
}

function show_git_dirty_indicator() {
    echo -e "*"
}

function remote_info() {
    
    
    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
        # Remote
        echo "${CYAN}Remote ☁  "
    else
        # Local
        echo "${ORANGE}Local ★  "
    fi
}

PS1="\n${BOLD}${PURPLE} \@ ${GREEN}$USER${YELLOW}@${GREEN}\h \[$RESET\]$(remote_info)${MAGENTA}\w\$(git_info)\[$WHITE\]\n$ \[$RESET\]"
